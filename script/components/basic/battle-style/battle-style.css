

*, *::after, *::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:host {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}


.style {
    background: white;
    display: grid;
    gap:1rem;
    box-shadow: 0 0 0.5cm rgba(0,0,0,0.5);
    outline: none;
    position: relative;
    grid-template-areas: "header header"
                        "content content"
                        "requirements base";
    grid-template-rows: auto 5fr 2fr;
    grid-template-columns: repeat(2, 1fr);
  }

  .style[size="A4"] {  
    width: 21cm;
    height: 29.7cm; 
  }

.style__header {
    grid-area: header;
    z-index: 1;
    display: flex;
    gap: 1rem;
    align-items: center;
    flex-direction: column;
    padding-block: 1rem;
}

.header__title {
    font-size: 28px;
    font-weight: bold;
    text-wrap-mode: nowrap;
    cursor: text;
    text-transform: uppercase;
}

.header__description {
    font-size: 14px;
    cursor: text;
}

.standard {
    grid-area: base;
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    flex-direction: column;
}

.requirements {
    grid-area: requirements;
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    flex-direction: column;
    position: relative;
}

.maneuver-settings {
    grid-area: requirements;
    display: block;
    width: 100%;
    height: 100%;
    z-index: 1000;
    background-color: white;
    position: relative;
}
.content {
    grid-area: content;
    overflow: hidden;
    position: relative;
    outline: none;
    display: block;
    flex:1;
}

.content__grid {
    display:block;
    width: 100%;
    height: 100%;
}

.hidden {
    display: none;
}

.requirements__container {
    flex:1;
    width: 100%;
}


.indicator {
    --client-x: 0px;
    --client-y: 0px;

    --radius: 25px;

    position: absolute;
    width: calc(2 * var(--radius));
    aspect-ratio: 1;
    border-radius: 50%;
    border: 3px solid transparent;
    pointer-events: none;
    top: calc(var(--client-y) - var(--radius));
    left: calc(var(--client-x) - var(--radius));
}

.indicator::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 3px solid rgba(0, 0, 255, 0.5);
    border-color: rgba(0, 0, 255, 0.5) transparent transparent transparent;
    transform: rotate(0deg);
    transform-origin: 50% 50%;
    animation: rotate 1s linear forwards;
}

@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

.maneuver {
    --client-x: 0px;
    --client-y: 0px;
    --radius: 70px;

    position: absolute;
    top: calc(var(--client-y) - var(--radius));
    left: calc(var(--client-x) - var(--radius));

    width: calc(var(--radius) * 2);
}

.baseline {
    position: absolute;
    background-color: red;
    z-index: 10;
}

.horizontal-baseline {
    height: 1px;
    width: 100%;
}

.vertical-baseline {
    width: 1px;
    height: 100%;
}

.standard__container {
    flex:1;
    width: 100%;

    display:grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 1rem;
    place-items: center;
}

.standard__container .maneuver {
    width: 5rem;
    position: relative;
    top: unset;
    left: unset;
    z-index: 1000;
}

.standard__container .maneuver:last-of-type {
    grid-column: 3;
}

.standard__title, .requirements__title {
    font-size: .9rem;
    font-weight: bold;
    text-transform: uppercase;
}

#toolbar {
    position: absolute;
    background-color: #f1f1f1;
    border: 1px solid #ccc;
    padding: 5px;
    z-index: 1000;
    top:0;
    left: 10px;
}

#toolbar button {
    padding: 5px 10px;
    margin-right: 5px;
    cursor: pointer;
}

[editor] {
    padding: 10px;
    min-height: 100px;
    cursor: text;
    text-align: left;
    position: relative;
}

.io-panel {
    position: absolute;
    background-color: #f1f1f1;
    border: 1px solid #ccc;
    padding: 5px;
    z-index: 1000;
    top:0;
    right: 10px;
}
/*
.arrow {
    position: absolute;
    border: 1px solid black;

    --adjacent-start-x: calc(var(--start-x) + var(--circle-radius) * cos(var(--angle)));
    --adjacent-start-y: calc(var(--start-y) + var(--circle-radius) * sin(var(--angle)));
    --adjacent-end-x: calc(var(--end-x) - var(--circle-radius) * cos(var(--angle)));
    --adjacent-end-y: calc(var(--end-y) - var(--circle-radius) * sin(var(--angle)));

    --angle:calc(atan2(calc(var(--end-y) - var(--start-y)), calc(var(--end-x) - var(--start-x))) * 180 * 1deg / pi);


    --length: hypot(calc(var(--adjacent-end-x) - var(--adjacent-start-x)), calc(var(--adjacent-end-y) - var(--adjacent-start-y)));

    width: var(--length);
    left: var(--adjacent-start-x);
    top: var(--adjacent-start-y);
    transform: rotate(var(--angle));
}*/

.arrow {
    position: absolute;
    border: 1px solid black;
    width: var(--length);
    left: var(--start-x);
    top: var(--start-y);
    transform-origin: 0% 50%;
    transform: rotate(var(--angle)) var(--transform-x) var(--transform-y);
}